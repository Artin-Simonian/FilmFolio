@page "/moviesearch"
@using System.Text.Json
@using MovieSearchApp.Models

<h3>Movie Search</h3>

<input @bind="searchQuery" placeholder="Enter movie title" />
<button type="button" @onclick="SearchMovies" disabled="@isLoading">Search</button>

@if (isLoading)
{
    <p>Loading...</p>
}
else if (movies != null && movies.Any())
{
    @foreach (var movie in movies)
    {
        <div class="movie-card">
            <h4>@movie.Title (@movie.Year)</h4>
            <p>@movie.Plot</p>
            <img src="@movie.Poster" alt="Poster" />
            <p><strong>Director:</strong> @movie.Director</p>
            <p><strong>Rating:</strong> @movie.imdbRating</p>
        </div>
    }
}
else if (movies != null && !movies.Any())
{
    <p>No movies found.</p>
}

@code {
    private string searchQuery = string.Empty;
    private List<Movie>? movies;
    private bool isLoading = false;

    private async Task SearchMovies()
    {
        isLoading = true;
        movies = new List<Movie>(); 
        try
        {
            var client = new HttpClient();
            var response = await client.GetStringAsync($"http://www.omdbapi.com/?apikey=c6489d51={searchQuery}");
            var result = JsonSerializer.Deserialize<MovieSearchResult>(response, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });

            if (result?.Search != null)
            {
                movies = result.Search;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
